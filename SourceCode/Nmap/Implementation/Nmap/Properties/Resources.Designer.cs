//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Nmap.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Nmap.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument &apos;{0}&apos; is null..
        /// </summary>
        internal static string ArgumentIsNull1 {
            get {
                return ResourceManager.GetString("ArgumentIsNull1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An inheritance map equal to the &apos;{0}&apos; already exists for a source or a destination type..
        /// </summary>
        internal static string InheritanceMapDuplicated1 {
            get {
                return ResourceManager.GetString("InheritanceMapDuplicated1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A source or derived type in the inheritance map {0} does not inherit or is not equal the corresponding type in the property map {1} in the type map {2}..
        /// </summary>
        internal static string InheritanceMapIsNotForDerivedTypes3 {
            get {
                return ResourceManager.GetString("InheritanceMapIsNotForDerivedTypes3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A mapper or an unmapper or a map for a type {0} to map or unmap from was not found..
        /// </summary>
        internal static string MapperNotFound1 {
            get {
                return ResourceManager.GetString("MapperNotFound1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid expression. Expression should be an one level member expression only..
        /// </summary>
        internal static string NotOneLevelMemberExpression {
            get {
                return ResourceManager.GetString("NotOneLevelMemberExpression", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument {0} is not simple..
        /// </summary>
        internal static string NotSimple1 {
            get {
                return ResourceManager.GetString("NotSimple1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A property map equal to the &apos;{0}&apos; already exists in the type map {1}..
        /// </summary>
        internal static string PropertyMapDuplicated2 {
            get {
                return ResourceManager.GetString("PropertyMapDuplicated2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property map {0} in the type map {1} has both mapper and inheritance maps or no one of them..
        /// </summary>
        internal static string PropertyMapHasMapperAndInheritanceMapsOrNothing2 {
            get {
                return ResourceManager.GetString("PropertyMapHasMapperAndInheritanceMapsOrNothing2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property map {0} of the type map {1} has not both source and destination types complex enumerables or complex types..
        /// </summary>
        internal static string PropertyMapIsNotForBothComplexEnumerableOrComplexTypes2 {
            get {
                return ResourceManager.GetString("PropertyMapIsNotForBothComplexEnumerableOrComplexTypes2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The property map {0} is not supported..
        /// </summary>
        internal static string PropertyMapIsNotSupported1 {
            get {
                return ResourceManager.GetString("PropertyMapIsNotSupported1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the mapper or unmapper is not defined in the property map {0} of the type map {1}, while the other one is defined..
        /// </summary>
        internal static string PropertyMapperOrPropertyUnMapperIsNotDefined2 {
            get {
                return ResourceManager.GetString("PropertyMapperOrPropertyUnMapperIsNotDefined2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument {0} is simple or is simple enumerable..
        /// </summary>
        internal static string SimpleOrSimpleEnumerable1 {
            get {
                return ResourceManager.GetString("SimpleOrSimpleEnumerable1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A type map equal to the &apos;{0}&apos; already exists..
        /// </summary>
        internal static string TypeMapDuplicated1 {
            get {
                return ResourceManager.GetString("TypeMapDuplicated1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type map {0} has both mapper and maps..
        /// </summary>
        internal static string TypeMapHasMapperAndMaps1 {
            get {
                return ResourceManager.GetString("TypeMapHasMapperAndMaps1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A source or a destinaton type in the map {0} is not a complex type..
        /// </summary>
        internal static string TypeMapIsNotForComplexTypes1 {
            get {
                return ResourceManager.GetString("TypeMapIsNotForComplexTypes1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type map {0} is not supported..
        /// </summary>
        internal static string TypeMapIsNotSupported1 {
            get {
                return ResourceManager.GetString("TypeMapIsNotSupported1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One of the mapper or unmapper is not defined while the other one is defined in the type map {0}..
        /// </summary>
        internal static string TypeMapperOrTypeUnMapperIsNotDefined1 {
            get {
                return ResourceManager.GetString("TypeMapperOrTypeUnMapperIsNotDefined1", resourceCulture);
            }
        }
    }
}
