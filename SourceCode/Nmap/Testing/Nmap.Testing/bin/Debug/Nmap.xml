<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Nmap</name>
    </assembly>
    <members>
        <member name="T:Nmap.MappingContext">
            <summary>
            Represents the base class for a custom mapping context.
            </summary>
        </member>
        <member name="T:Nmap.MapBuilder">
            <summary>
            Provides functionality for building maps.
            </summary>
        </member>
        <member name="T:Nmap.TypeMapCreating">
            <summary>
            Represents the type map creating.
            </summary>
        </member>
        <member name="M:Nmap.TypeMapCreating.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.TypeMapCreating" /> class.
            </summary>
        </member>
        <member name="M:Nmap.TypeMapCreating.CreateMap``2">
            <summary>
            Creates the map.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TDestination">The type of the destination.</typeparam>
            <returns>The type map configuration.</returns>
        </member>
        <member name="M:Nmap.TypeMapCreating.CreateReversiveMap``2">
            <summary>
            Creates the reversive map.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TDestination">The type of the destination.</typeparam>
            <returns>The reversive type map configuration.</returns>
        </member>
        <member name="M:Nmap.MapBuilder.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:Nmap.MapBuilder" /> class from being created.
            </summary>
        </member>
        <member name="M:Nmap.MapBuilder.#cctor">
            <summary>
            Initializes the <see cref="T:Nmap.MapBuilder" /> class.
            </summary>
        </member>
        <member name="P:Nmap.MapBuilder.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="T:Nmap.Mapper`1">
            <summary>
            Represents the base class for mappers.
            </summary>
            <typeparam name="TMapper">The type of the mapper.</typeparam>
        </member>
        <member name="M:Nmap.Mapper`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.Mapper`1" /> class.
            </summary>
        </member>
        <member name="M:Nmap.Mapper`1.#cctor">
            <summary>
            Initializes the <see cref="T:Nmap.Mapper`1" /> class.
            </summary>
        </member>
        <member name="M:Nmap.Mapper`1.GetMap``2">
            <summary>
            Gets the map.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TDestination">The type of the destination.</typeparam>
            <returns>The map.</returns>
        </member>
        <member name="M:Nmap.Mapper`1.AddMap(Nmap.TypeMapBase)">
            <summary>
            Adds the map.
            </summary>
            <param name="map">The map.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="map" /> is null.</exception>
        </member>
        <member name="M:Nmap.Mapper`1.RemoveMap``2">
            <summary>
            Removes the map.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TDestination">The type of the destination.</typeparam>
        </member>
        <member name="M:Nmap.Mapper`1.ClearMaps">
            <summary>
            Clears the maps.
            </summary>
        </member>
        <member name="M:Nmap.Mapper`1.SetObjectFactory(Nmap.ObjectFactory)">
            <summary>
            Sets the object factory.
            </summary>
            <param name="factory">The factory.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="factory" /> is null.</exception>
        </member>
        <member name="M:Nmap.Mapper`1.AddConverter``2(System.Func{``0,Nmap.TypeMappingContext,``1})">
            <summary>
            Adds the converter.
            </summary>
            <typeparam name="TSourceProperty">The type of the source property.</typeparam>
            <typeparam name="TDestinationProperty">The type of the destination property.</typeparam>
            <param name="converter">The converter.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="converter" /> is null.</exception>
            <exception cref="T:System.ArgumentException">The <typeparamref name="TSourceProperty" />
            or <typeparamref name="TDestinationProperty" />is not a simple type.</exception>
        </member>
        <member name="M:Nmap.Mapper`1.RemoveConverter``2">
            <summary>
            Removes the converter.
            </summary>
            <typeparam name="TSourceProperty">The type of the source property.</typeparam>
            <typeparam name="TDestinationProperty">The type of the destination property.</typeparam>
            <exception cref="T:System.ArgumentException">The <typeparamref name="TSourceProperty" />
            or <typeparamref name="TDestinationProperty" />is not a simple type.</exception>
        </member>
        <member name="M:Nmap.Mapper`1.ClearConverters">
            <summary>
            Clears the converters.
            </summary>
        </member>
        <member name="M:Nmap.Mapper`1.Setup">
            <summary>
            Setups this mapper.
            </summary>
            <exception cref="T:Nmap.MapValidationException">Some maps are not valid.</exception>
        </member>
        <member name="M:Nmap.Mapper`1.Map``1(System.Object,Nmap.MappingContext)">
            <summary>
            Maps the specified source.
            </summary>
            <typeparam name="TDestination">The type of the destination.</typeparam>
            <param name="source">The source.</param>
            <param name="context">The context.</param>
            <returns>The destination object.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source" /> is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="source" />
            or <typeparamref name="TDestination" /> is simple.</exception>
            <exception cref="T:Nmap.MappingException">A mapping error occured.</exception>
        </member>
        <member name="M:Nmap.Mapper`1.Map``1(System.Object,``0,Nmap.MappingContext)">
            <summary>
            Maps the specified source.
            </summary>
            <typeparam name="TDestination">The type of the destination.</typeparam>
            <param name="source">The source.</param>
            <param name="destination">The destination.</param>
            <param name="context">The context.</param>
            <returns>The destination object.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source" />
            or <paramref name="destination" /> is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="source" />
            or <paramref name="destination" /> is simple.</exception>
            <exception cref="T:Nmap.MappingException">A mapping error occured.</exception>
        </member>
        <member name="M:Nmap.Mapper`1.Map(System.Object,System.Type,Nmap.MappingContext)">
            <summary>
            Maps the specified source.
            </summary>
            <param name="source">The source.</param>
            <param name="destinationType">Type of the destination.</param>
            <param name="context">The context.</param>
            <returns>The destination object.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="source" /> or
            <paramref name="destinationType" /> is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="source" />
            or <paramref name="destinationType" /> is simple.</exception>
            <exception cref="T:Nmap.MappingException">A mapping error occured.</exception>
        </member>
        <member name="M:Nmap.Mapper`1.Unmap``1(System.Object,Nmap.MappingContext)">
            <summary>
            Unmaps the specified destination.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="destination">The destination.</param>
            <param name="context">The context.</param>
            <returns>The source object.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destination" /> is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="destination" />
            or <typeparamref name="TSource" /> is simple.</exception>
            <exception cref="T:Nmap.MappingException">An unmapping error occured.</exception>
        </member>
        <member name="M:Nmap.Mapper`1.Unmap``1(System.Object,``0,Nmap.MappingContext)">
            <summary>
            Unmaps the specified destination.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <param name="destination">The destination.</param>
            <param name="source">The source.</param>
            <param name="context">The context.</param>
            <returns>The source object.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destination" />
            or <paramref name="source" /> is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="destination" />
            or <paramref name="source" /> is simple.</exception>
            <exception cref="T:Nmap.MappingException">An unmapping error occured.</exception>
        </member>
        <member name="M:Nmap.Mapper`1.Unmap(System.Object,System.Type,Nmap.MappingContext)">
            <summary>
            Unmaps the specified destination.
            </summary>
            <param name="destination">The destination.</param>
            <param name="sourceType">Type of the source.</param>
            <param name="context">The context.</param>
            <returns>The source object.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="destination" />
            or <paramref name="sourceType" /> is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="destination" />
            or <paramref name="sourceType" /> is simple.</exception>
            <exception cref="T:Nmap.MappingException">An unmapping error occured.</exception>
        </member>
        <member name="M:Nmap.Mapper`1.Map(Nmap.Internal.MapperCollection,Nmap.TypeMappingContext)">
            <summary>
            Maps the specified context.
            </summary>
            <param name="relatedMappers">Related mappers collection.</param>
            <param name="context">The context.</param>
            <returns>The mapped object.</returns>
            <exception cref="T:Nmap.MappingException">A mapping error occured.</exception>
        </member>
        <member name="M:Nmap.Mapper`1.ValidateMaps(Nmap.Internal.TypeMapCollection)">
            <summary>
            Validates the maps.
            </summary>
            <param name="maps">The maps.</param>
            <exception cref="T:Nmap.MapValidationException">Some maps are not valid.</exception>
        </member>
        <member name="P:Nmap.Mapper`1.Instance">
            <summary>
            Gets the instance.
            </summary>
        </member>
        <member name="T:Nmap.MappingException">
            <summary>
            Represents the exception during mapping.
            </summary>
        </member>
        <member name="T:Nmap.NmapException">
            <summary>
            Represents the base class for all the exceptions of the framework.
            </summary>
        </member>
        <member name="M:Nmap.NmapException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.NmapException" /> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:Nmap.NmapException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.NmapException" /> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="M:Nmap.MappingException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.MappingException" /> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:Nmap.MappingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.MappingException" /> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Nmap.MapValidationException">
            <summary>
            Represents the exception during validation.
            </summary>
        </member>
        <member name="M:Nmap.MapValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.MapValidationException" /> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:Nmap.MapValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.MapValidationException" /> class.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The contextual information about the source or destination.</param>
        </member>
        <member name="T:Nmap.ObjectFactory">
            <summary>
            The factory for creation source and destination objects.
            </summary>
        </member>
        <member name="M:Nmap.ObjectFactory.CreateTargetObject(System.Object,System.Type,Nmap.MappingContext)">
            <summary>
            Creates the target object.
            </summary>
            <param name="from">The value from which the mapping is executed.</param>
            <param name="targetType">The target type.</param>
            <param name="context">The context.</param>
            <returns>The target object.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="from" />
            or <paramref name="targetType" /> is null.</exception>
        </member>
        <member name="T:Nmap.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.ArgumentIsNull1">
            <summary>
              Looks up a localized string similar to The argument &apos;{0}&apos; is null..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.InheritanceMapDuplicated1">
            <summary>
              Looks up a localized string similar to An inheritance map equal to the &apos;{0}&apos; already exists for a source or a destination type..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.InheritanceMapIsNotForDerivedTypes3">
            <summary>
              Looks up a localized string similar to A source or derived type in the inheritance map {0} does not inherit or is not equal the corresponding type in the property map {1} in the type map {2}..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.MapperNotFound1">
            <summary>
              Looks up a localized string similar to A mapper or an unmapper or a map for a type {0} to map or unmap from was not found..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.NotOneLevelMemberExpression">
            <summary>
              Looks up a localized string similar to Invalid expression. Expression should be an one level member expression only..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.NotSimple1">
            <summary>
              Looks up a localized string similar to The argument {0} is not simple..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.PropertyMapDuplicated2">
            <summary>
              Looks up a localized string similar to A property map equal to the &apos;{0}&apos; already exists in the type map {1}..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.PropertyMapHasMapperAndInheritanceMapsOrNothing2">
            <summary>
              Looks up a localized string similar to The property map {0} in the type map {1} has both mapper and inheritance maps or no one of them..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.PropertyMapIsNotForBothComplexEnumerableOrComplexTypes2">
            <summary>
              Looks up a localized string similar to The property map {0} of the type map {1} has not both source and destination types complex enumerables or complex types..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.PropertyMapIsNotSupported1">
            <summary>
              Looks up a localized string similar to The property map {0} is not supported..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.PropertyMapperOrPropertyUnMapperIsNotDefined2">
            <summary>
              Looks up a localized string similar to One of the mapper or unmapper is not defined in the property map {0} of the type map {1}, while the other one is defined..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.SimpleOrSimpleEnumerable1">
            <summary>
              Looks up a localized string similar to The argument {0} is simple or is simple enumerable..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.TypeMapDuplicated1">
            <summary>
              Looks up a localized string similar to A type map equal to the &apos;{0}&apos; already exists..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.TypeMapHasMapperAndMaps1">
            <summary>
              Looks up a localized string similar to The type map {0} has both mapper and maps..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.TypeMapIsNotForComplexTypes1">
            <summary>
              Looks up a localized string similar to A source or a destinaton type in the map {0} is not a complex type..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.TypeMapIsNotSupported1">
            <summary>
              Looks up a localized string similar to The type map {0} is not supported..
            </summary>
        </member>
        <member name="P:Nmap.Properties.Resources.TypeMapperOrTypeUnMapperIsNotDefined1">
            <summary>
              Looks up a localized string similar to One of the mapper or unmapper is not defined while the other one is defined in the type map {0}..
            </summary>
        </member>
        <member name="T:Nmap.PropertyMap">
            <summary>
            Represents the property map.
            </summary>
        </member>
        <member name="T:Nmap.PropertyMapBase">
            <summary>
            Represents the base class for property maps.
            </summary>
        </member>
        <member name="M:Nmap.PropertyMapBase.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.PropertyMapBase" /> class.
            </summary>
            <param name="sourcePropertyInfo">The source property information.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sourcePropertyInfo" /> is null.</exception>
        </member>
        <member name="M:Nmap.PropertyMapBase.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Nmap.PropertyMapBase.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Nmap.PropertyMapBase.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="P:Nmap.PropertyMapBase.SourcePropertyInfo">
            <summary>
            Gets the source property information.
            </summary>
        </member>
        <member name="P:Nmap.PropertyMapBase.DestinationPropertyInfo">
            <summary>
            Gets or sets the destination property information.
            </summary>
        </member>
        <member name="P:Nmap.PropertyMapBase.Mapper">
            <summary>
            Gets or sets the mapper.
            </summary>
        </member>
        <member name="M:Nmap.PropertyMap.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.PropertyMap" /> class.
            </summary>
            <param name="sourcePropertyInfo">The source property information.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sourcePropertyInfo" /> is null.</exception>
        </member>
        <member name="P:Nmap.PropertyMap.InheritanceMaps">
            <summary>
            Gets the inheritance maps.
            </summary>
        </member>
        <member name="T:Nmap.ReversivePropertyMap">
            <summary>
            Represents th reversive property map.
            </summary>
        </member>
        <member name="M:Nmap.ReversivePropertyMap.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.ReversivePropertyMap" /> class.
            </summary>
            <param name="sourcePropertyInfo">The source property information.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sourcePropertyInfo" /> is null.</exception>
        </member>
        <member name="P:Nmap.ReversivePropertyMap.InheritanceMaps">
            <summary>
            Gets the inheritance maps.
            </summary>
        </member>
        <member name="P:Nmap.ReversivePropertyMap.UnMapper">
            <summary>
            Gets or sets the un mapper.
            </summary>
        </member>
        <member name="T:Nmap.ReversiveTypeMap">
            <summary>
            Represents the reversive type map.
            </summary>
        </member>
        <member name="T:Nmap.TypeMapBase">
            <summary>
            Represents the base class for type maps.
            </summary>
        </member>
        <member name="M:Nmap.TypeMapBase.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.TypeMapBase" /> class.
            </summary>
            <param name="sourceType">Type of the source.</param>
            <param name="destinationType">Type of the destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sourceType" />
            or <paramref name="destinationType" /> is null.</exception>
        </member>
        <member name="M:Nmap.TypeMapBase.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="P:Nmap.TypeMapBase.SourceType">
            <summary>
            Gets the type of the source.
            </summary>
        </member>
        <member name="P:Nmap.TypeMapBase.DestinationType">
            <summary>
            Gets the type of the destination.
            </summary>
        </member>
        <member name="P:Nmap.TypeMapBase.Mapper">
            <summary>
            Gets or sets the mapper.
            </summary>
        </member>
        <member name="M:Nmap.ReversiveTypeMap.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.ReversiveTypeMap" /> class.
            </summary>
            <param name="sourceType">Type of the source.</param>
            <param name="destinationType">Type of the destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sourceType" />
            or <paramref name="destinationType" /> is null.</exception>
        </member>
        <member name="P:Nmap.ReversiveTypeMap.PropertyMaps">
            <summary>
            Gets the property maps.
            </summary>
        </member>
        <member name="P:Nmap.ReversiveTypeMap.UnMapper">
            <summary>
            Gets or sets the un mapper.
            </summary>
        </member>
        <member name="T:Nmap.ReversiveTypeMapConfiguration`2">
            <summary>
            Represents the reversive type map configuration.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TDestination">The type of the destination.</typeparam>
        </member>
        <member name="T:Nmap.ReversiveTypeMapPropertyConfiguration`2">
            <summary>
            Represents the reversive type map property configuration.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TDestination">The type of the destination.</typeparam>
        </member>
        <member name="M:Nmap.ReversiveTypeMapPropertyConfiguration`2.#ctor(Nmap.ReversiveTypeMap)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.ReversiveTypeMapPropertyConfiguration`2" /> class.
            </summary>
            <param name="map">The map.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="map" /> is null.</exception>
        </member>
        <member name="M:Nmap.ReversiveTypeMapPropertyConfiguration`2.MapProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.Action{`0,`1,Nmap.TypeMappingContext},System.Action{`1,`0,Nmap.TypeMappingContext})">
            <summary>
            Maps the property.
            </summary>
            <param name="sourceProperty">The source property.</param>
            <param name="destinationProperty">The destination property.</param>
            <param name="mapper">The mapper.</param>
            <param name="unMapper">The un mapper.</param>
            <returns>The reversive type map property configuration.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sourceProperty" />
            or <paramref name="mapper" /> or <paramref name="unMapper" /> is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="sourceProperty" />
            or <paramref name="destinationProperty" /> is not one level property expression.</exception>
        </member>
        <member name="M:Nmap.ReversiveTypeMapPropertyConfiguration`2.MapProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.Collections.Generic.IEnumerable{Nmap.ReversiveTypeMap})">
            <summary>
            Maps the property.
            </summary>
            <param name="sourceProperty">The source property.</param>
            <param name="destinationProperty">The destination property.</param>
            <param name="inheritanceMaps">The inheritance maps.</param>
            <returns>The reversive type map property configuration.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sourceProperty" />
            or <paramref name="inheritanceMaps" /> is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="sourceProperty" />
            or <paramref name="destinationProperty" /> is not one level property expression.</exception>
        </member>
        <member name="P:Nmap.ReversiveTypeMapPropertyConfiguration`2.Map">
            <summary>
            Gets the map.
            </summary>
        </member>
        <member name="M:Nmap.ReversiveTypeMapConfiguration`2.#ctor(Nmap.ReversiveTypeMap)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.ReversiveTypeMapConfiguration`2" /> class.
            </summary>
            <param name="map">The map.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="map" /> is null.</exception>
        </member>
        <member name="M:Nmap.ReversiveTypeMapConfiguration`2.As(System.Action{`0,`1,Nmap.TypeMappingContext},System.Action{`1,`0,Nmap.TypeMappingContext})">
            <summary>
            Sets the specified mapper.
            </summary>
            <param name="mapper">The mapper.</param>
            <param name="unMapper">The un mapper.</param>
            <returns>The reversive type map.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="mapper" />
            or <paramref name="unMapper" /> is null.</exception>
        </member>
        <member name="T:Nmap.TypeMap">
            <summary>
            Represents the type map.
            </summary>
        </member>
        <member name="M:Nmap.TypeMap.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.TypeMap" /> class.
            </summary>
            <param name="sourceType">Type of the source.</param>
            <param name="destinationType">Type of the destination.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sourceType" />
            or <paramref name="destinationType" /> is null.</exception>
        </member>
        <member name="P:Nmap.TypeMap.PropertyMaps">
            <summary>
            Gets the property maps.
            </summary>
        </member>
        <member name="T:Nmap.TypeMapConfiguration`2">
            <summary>
            Represents the type map configuration.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TDestination">The type of the destination.</typeparam>
        </member>
        <member name="T:Nmap.TypeMapPropertyConfiguration`2">
            <summary>
            Represents the type map property configuration.
            </summary>
            <typeparam name="TSource">The type of the source.</typeparam>
            <typeparam name="TDestination">The type of the destination.</typeparam>
        </member>
        <member name="M:Nmap.TypeMapPropertyConfiguration`2.#ctor(Nmap.TypeMap)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.TypeMapPropertyConfiguration`2" /> class.
            </summary>
            <param name="map">The map.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="map" /> is null.</exception>
        </member>
        <member name="M:Nmap.TypeMapPropertyConfiguration`2.MapProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Action{`0,`1,Nmap.TypeMappingContext})">
            <summary>
            Maps the property.
            </summary>
            <param name="sourceProperty">The source property.</param>
            <param name="mapper">The mapper.</param>
            <returns>The type map property configuration.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sourceProperty" />
            or <paramref name="mapper" /> is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="sourceProperty" />
            is not one level property expression.</exception>
        </member>
        <member name="M:Nmap.TypeMapPropertyConfiguration`2.MapProperty(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Linq.Expressions.Expression{System.Func{`1,System.Object}},System.Collections.Generic.IEnumerable{Nmap.TypeMap})">
            <summary>
            Maps the property.
            </summary>
            <param name="sourceProperty">The source property.</param>
            <param name="destinationProperty">The destination property.</param>
            <param name="inheritanceMaps">The inheritance maps.</param>
            <returns>The type map property configuration.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="sourceProperty" />
            or <paramref name="inheritanceMaps" /> is null.</exception>
            <exception cref="T:System.ArgumentException">The <paramref name="sourceProperty" />
            or <paramref name="destinationProperty" /> is not one level property expression.</exception>
        </member>
        <member name="P:Nmap.TypeMapPropertyConfiguration`2.Map">
            <summary>
            Gets the map.
            </summary>
        </member>
        <member name="M:Nmap.TypeMapConfiguration`2.#ctor(Nmap.TypeMap)">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.TypeMapConfiguration`2" /> class.
            </summary>
            <param name="map">The map.</param>
            <exception cref="T:System.ArgumentNullException">The <paramref name="map" /> is null.</exception>
        </member>
        <member name="M:Nmap.TypeMapConfiguration`2.As(System.Action{`0,`1,Nmap.TypeMappingContext})">
            <summary>
            Sets the specified mapper.
            </summary>
            <param name="mapper">The mapper.</param>
            <returns>The type map.</returns>
            <exception cref="T:System.ArgumentNullException">The <paramref name="mapper" /> is null.</exception>
        </member>
        <member name="T:Nmap.TypeMappingContext">
            <summary>
            Represents the type mapping context.
            </summary>
        </member>
        <member name="M:Nmap.TypeMappingContext.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Nmap.TypeMappingContext" /> class.
            </summary>
        </member>
        <member name="P:Nmap.TypeMappingContext.MappingContext">
            <summary>
            Gets or sets the mapping context.
            </summary>
        </member>
        <member name="P:Nmap.TypeMappingContext.From">
            <summary>
            Gets the object is mapping from.
            </summary>
        </member>
        <member name="P:Nmap.TypeMappingContext.To">
            <summary>
            Gets the object is mapping to.
            </summary>
        </member>
    </members>
</doc>
